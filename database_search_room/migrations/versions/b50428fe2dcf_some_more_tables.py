"""some more tables

Revision ID: b50428fe2dcf
Revises: c9e5e66f270d
Create Date: 2025-01-04 19:02:55.275127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b50428fe2dcf'
down_revision: Union[str, None] = 'c9e5e66f270d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id_x', sa.String(length=100), nullable=False),
    sa.Column('user_id_y', sa.String(length=100), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('room_status', sa.String(length=50), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hobbies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('hobbies_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='hobbies_pkey'),
    sa.UniqueConstraint('name', name='hobbies_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_profile_hobby',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_profile_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hobby_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hobby_id'], ['hobbies.id'], name='user_profile_hobby_hobby_id_fkey'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profile.id'], name='user_profile_hobby_user_profile_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_profile_hobby_pkey')
    )
    op.create_table('user_profile',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_profile_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id_x', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gender', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name='user_profile_country_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_profile_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_preference_hobby',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_preference_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hobby_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hobby_id'], ['hobbies.id'], name='user_preference_hobby_hobby_id_fkey'),
    sa.ForeignKeyConstraint(['user_preference_id'], ['user_preferences.id'], name='user_preference_hobby_user_preference_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_preference_hobby_pkey')
    )
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('preferred_gender', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('preferred_age_min', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('preferred_age_max', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('preferred_country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['preferred_country_id'], ['countries.id'], name='user_preferences_preferred_country_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user_profile.id'], name='user_preferences_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_preferences_pkey')
    )
    op.create_table('countries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='countries_pkey'),
    sa.UniqueConstraint('name', name='countries_name_key')
    )
    op.drop_table('room_history')
    # ### end Alembic commands ###
